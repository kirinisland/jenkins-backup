<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.36">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>date</name>
          <description></description>
          <value>20200325</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>date</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.15">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@1.5.1">
      <stagesUUID>b0504d87-7d2d-4a97-ab88-8e6cfca1ccf8</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@1.5.1">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>process</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">builds = [:]
                builds[&quot;${date}&quot;] = {
                    // retry (1) {
                    //     def results = build(job: &quot;data-liuxing&quot;,
                    //         parameters: [string(name: &quot;date&quot;, value: date)],
                    //         propagate: true)
                    // }
                    retry (1) {
                        def results = build(job: &quot;data-minyao&quot;,
                            parameters: [string(name: &quot;date&quot;, value: date)],
                            propagate: true)
                    }
                    retry (1) {
                        def results = build(job: &quot;data-shuochang&quot;,
                            parameters: [string(name: &quot;date&quot;, value: date)],
                            propagate: true)
                    }
                    retry (1) {
                        def results = build(job: &quot;data-zhongguofeng&quot;,
                            parameters: [string(name: &quot;date&quot;, value: date)],
                            propagate: true)
                    }
                }
                parallel(builds)</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>b0504d87-7d2d-4a97-ab88-8e6cfca1ccf8</uuid>
          </stages>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.80">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <jenkins.model.InterruptedBuildAction>
      <causes class="com.google.common.collect.ImmutableList">
        <org.jenkinsci.plugins.workflow.support.steps.build.DownstreamFailureCause plugin="pipeline-build-step@2.11">
          <id>data-shuochang#5</id>
        </org.jenkinsci.plugins.workflow.support.steps.build.DownstreamFailureCause>
      </causes>
    </jenkins.model.InterruptedBuildAction>
  </actions>
  <queueId>107</queueId>
  <timestamp>1585319894782</timestamp>
  <startTime>1585319894784</startTime>
  <result>FAILURE</result>
  <duration>50868409</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>pipeline {
   agent any

   stages {
      stage(&quot;process&quot;) {
         steps {
            script {
                builds = [:]
                builds[&quot;${date}&quot;] = {
                    // retry (1) {
                    //     def results = build(job: &quot;data-liuxing&quot;,
                    //         parameters: [string(name: &quot;date&quot;, value: date)],
                    //         propagate: true)
                    // }
                    retry (1) {
                        def results = build(job: &quot;data-minyao&quot;,
                            parameters: [string(name: &quot;date&quot;, value: date)],
                            propagate: true)
                    }
                    retry (1) {
                        def results = build(job: &quot;data-shuochang&quot;,
                            parameters: [string(name: &quot;date&quot;, value: date)],
                            propagate: true)
                    }
                    retry (1) {
                        def results = build(job: &quot;data-zhongguofeng&quot;,
                            parameters: [string(name: &quot;date&quot;, value: date)],
                            propagate: true)
                    }
                }
                parallel(builds)
            }
         }
      }
   }
}
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>47164892</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>509628546</long>
      </entry>
      <entry>
        <string>run</string>
        <long>513877558</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>22306690</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>65128576</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>29</iota>
    <head>1:29</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>
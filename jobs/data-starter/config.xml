<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.36">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.5.1"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.5.1">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>date</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>pipeline {
   agent any

   stages {
      stage(&quot;process&quot;) {
         steps {
            script {
                builds = [:]
                builds[&quot;${date}&quot;] = {
                    // retry (1) {
                    //     def results = build(job: &quot;data-liuxing&quot;,
                    //         parameters: [string(name: &quot;date&quot;, value: date)],
                    //         propagate: true)
                    // }
                    retry (1) {
                        def results = build(job: &quot;data-minyao&quot;,
                            parameters: [string(name: &quot;date&quot;, value: date)],
                            propagate: true)
                    }
                    retry (1) {
                        def results = build(job: &quot;data-shuochang&quot;,
                            parameters: [string(name: &quot;date&quot;, value: date)],
                            propagate: true)
                    }
                    retry (1) {
                        def results = build(job: &quot;data-zhongguofeng&quot;,
                            parameters: [string(name: &quot;date&quot;, value: date)],
                            propagate: true)
                    }
                }
                parallel(builds)
            }
         }
      }
   }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>